cmake_minimum_required(VERSION 3.15)

# Automatically use vcpkg toolchain if VCPKG_ROOT is set
if (DEFINED ENV{VCPKG_ROOT})
	message(STATUS "Using vcpkg from: $ENV{VCPKG_ROOT}")
	set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
		CACHE STRING "Vcpkg toolchain file")
endif()

project(unamed_jam LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Collect all source files
file(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR}/src/*.cpp)

# Collect all headers for IDE organization
file(GLOB_RECURSE HEADER_FILES
    ${CMAKE_SOURCE_DIR}/include/*.h
    ${CMAKE_SOURCE_DIR}/include/*.hpp
)

# Create the executable target (with source files only)
add_executable(unamed_jam ${SOURCES})

# Add headers to the target for IDE visibility
target_sources(unamed_jam PRIVATE ${HEADER_FILES})

# Add include directories for the target
target_include_directories(unamed_jam PRIVATE ${CMAKE_SOURCE_DIR}/include)

find_package(SDL2 CONFIG REQUIRED)
find_package(SDL2_image CONFIG REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)

target_link_libraries(unamed_jam PRIVATE
	SDL2::SDL2 
	SDL2::SDL2main
	SDL2_image::SDL2_image
	nlohmann_json::nlohmann_json
)

